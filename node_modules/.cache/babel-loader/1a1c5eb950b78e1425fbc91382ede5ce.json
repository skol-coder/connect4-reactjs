{"ast":null,"code":"import _slicedToArray from\"D:\\\\TP\\\\Connect4-reactjs\\\\connect4-reactjs\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _objectSpread from\"D:\\\\TP\\\\Connect4-reactjs\\\\connect4-reactjs\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import'./Connect_4.css';import GamePlayerCard from'../../components/GamePlayerCard';import Button from'../../components/Button';import{useNavigate}from'react-router-dom';import{useReducer,useState}from'react';import{checkForWin,deepCloneBoard,generateNewBoard}from'../../GameLogic';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var gameInitiated=false;var initialGameState={player1:1,player2:2,currentPlayer:null,board:[[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null]],gameOver:false,message:''};var gameReducer=function gameReducer(state,action){switch(action.type){case'newGame':return _objectSpread(_objectSpread({},initialGameState),{},{board:action.board});case'togglePlayer':return _objectSpread(_objectSpread({},state),{},{currentPlayer:action.nextPlayer,board:action.board});case'endGame':return _objectSpread(_objectSpread({},state),{},{gameOver:true,message:action.message,board:action.board});case'updateMessage':return _objectSpread(_objectSpread({},state),{},{message:action.message});default:throw Error(\"Action \\\"\".concat(action.type,\"\\\" is not a valid action.\"));}};function Connect_4(_ref){var player1Img=_ref.player1Img,player2Img=_ref.player2Img,player1=_ref.player1,player2=_ref.player2,score1=_ref.score1,score2=_ref.score2,setScore1=_ref.setScore1,setScore2=_ref.setScore2,gameNumber=_ref.gameNumber,setGameNumber=_ref.setGameNumber;var _useReducer=useReducer(gameReducer,initialGameState),_useReducer2=_slicedToArray(_useReducer,2),gameState=_useReducer2[0],dispatchGameState=_useReducer2[1];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentMoveRow=_useState2[0],setCurrentMoveRow=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentMoveColumn=_useState4[0],setCurrentMoveColumn=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showCongratulation=_useState6[0],setshowCongratulation=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showNewGameButton=_useState8[0],setshowNewGameButton=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),undoButtonPressed=_useState10[0],setundoButtonPressed=_useState10[1];var _useState11=useState('classForOrangeBorder'),_useState12=_slicedToArray(_useState11,2),Player1Class=_useState12[0],setPlayer1Class=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),Player2Class=_useState14[0],setPlayer2Class=_useState14[1];var board=deepCloneBoard(gameState.board);var result=checkForWin(board);//triggered when clicked on circle\nvar play=function play(c){if(!gameState.gameOver){var _result,_result2,_result3;board=deepCloneBoard(gameState.board);//check if cell is taken by starting at the bottom row and working up\nfor(var r=7;r>=0;r--){if(!board[r][c]){board[r][c]=gameState.currentPlayer;setCurrentMoveRow(r);setCurrentMoveColumn(c);console.log(board);break;}}// Check status of board\nresult=checkForWin(board);if(((_result=result)===null||_result===void 0?void 0:_result.playerWon)===gameState.player1){displayCongratulationAndButton();setScore1(score1+1);gameNumber<4?setGameNumber(gameNumber+1):dispatchGameState({type:'updateMessage',message:'Game Tournament Over'});dispatchGameState({type:'endGame',message:'Player1 (Green) wins!',board:board});}else if(((_result2=result)===null||_result2===void 0?void 0:_result2.playerWon)===gameState.player2){displayCongratulationAndButton();setScore2(score2+1);gameNumber<4?setGameNumber(gameNumber+1):dispatchGameState({type:'updateMessage',message:'Game Tournament Over'});dispatchGameState({type:'endGame',message:'Player2 (Yellow) wins!',board:board});}else if(((_result3=result)===null||_result3===void 0?void 0:_result3.playerWon)==='draw'){displayCongratulationAndButton();gameNumber<4?setGameNumber(gameNumber+1):dispatchGameState({type:'updateMessage',message:'Game Tournament Over'});dispatchGameState({type:'endGame',message:'Draw Game!',board:board});}else{var currentPlayerUndo=gameState.currentPlayer;if(undoButtonPressed){var nextPlayer=currentPlayerUndo;profileImgBorder(nextPlayer);dispatchGameState({type:'togglePlayer',nextPlayer:nextPlayer,board:board});setundoButtonPressed(false);}else{var _nextPlayer=gameState.currentPlayer===gameState.player1?gameState.player2:gameState.player1;profileImgBorder(_nextPlayer);dispatchGameState({type:'togglePlayer',nextPlayer:_nextPlayer,board:board});}}}// it's gameover and a user clicked a cell\nelse{dispatchGameState({type:'updateMessage',message:'Game Over. Please start a new game.'});}};function profileImgBorder(nextPlayer){if(nextPlayer===1){setPlayer1Class('classForOrangeBorder');setPlayer2Class('');}else if(nextPlayer===2){setPlayer1Class('');setPlayer2Class('classForOrangeBorder');}}function displayCongratulationAndButton(){setshowCongratulation(true);setshowNewGameButton(true);}//REMOVE EVENT LISTENERS AND DOCUMENT.....================================================================\n//Start new game\nfunction newGameButtonHandler(){if(gameNumber<4){dispatchGameState({type:'newGame',board:generateNewBoard()});setshowCongratulation(false);setshowNewGameButton(false);}else{score1>score2?alert(\"Player 1 won please click on end tournament\"):score2>score1?alert(\"Player 2 won please click on end tournament\"):alert(\"Game Draw\");dispatchGameState({type:'updateMessage',message:'Game Tournament Over'});}};//UNDO\nfunction undoButtonHandler(){setundoButtonPressed(true);gameState.board[currentMoveRow][currentMoveColumn]=null;}console.log(gameState.message);//Start the game\nfunction initiateGame(){if(gameInitiated===false){gameInitiated=true;dispatchGameState({type:'newGame',board:generateNewBoard()});}}//  ============================================================================================================================================================   \nvar navigate=useNavigate();return/*#__PURE__*/_jsxs(\"div\",{className:\"gameApp\",children:[initiateGame(),/*#__PURE__*/_jsx(\"div\",{className:\"left-half\",children:initialGameState.board.map(function(d,rowIndex){return initialGameState.board[rowIndex].map(function(value,colIndex){var _result4;var showRing=((_result4=result)===null||_result4===void 0?void 0:_result4.winningCombination.filter(function(d){return d[0]===rowIndex&&d[1]===colIndex;}).length)>0;return/*#__PURE__*/_jsx(\"div\",{id:\"\".concat(rowIndex).concat(colIndex),onClick:function onClick(){console.log({rowIndex:rowIndex,colIndex:colIndex});play(colIndex);},className:\"CirclesWhite \".concat(showRing?'winningCombinationRing':''),children:board[rowIndex][colIndex]===1?/*#__PURE__*/_jsx(\"img\",{id:\"img\".concat(rowIndex).concat(colIndex),style:{height:'44px',width:'44px',borderRadius:'50%',border:'3px solid #75fc9d'},src:player1Img,alt:\"\"}):board[rowIndex][colIndex]===2?/*#__PURE__*/_jsx(\"img\",{id:\"img\".concat(rowIndex).concat(colIndex),style:{height:'44px',width:'44px',borderRadius:'50%',border:'3px solid #f5d878'},src:player2Img,alt:\"\"}):null},\"\".concat(rowIndex).concat(colIndex));});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"right-half\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"gamesTournament\",children:\"3 Games Tournament\"}),showCongratulation?/*#__PURE__*/_jsx(\"p\",{id:\"congratulation\",className:\"congratulation\",children:\"Congratulation!\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Game is going on\"}),!gameState.gameOver&&/*#__PURE__*/_jsxs(\"h3\",{className:\"playingGame\",children:[\"Playing Game \",gameNumber]}),gameState.gameOver&&/*#__PURE__*/_jsx(\"h3\",{className:\"playingGame\",children:gameState.message}),/*#__PURE__*/_jsxs(\"div\",{className:\"gamePlayers\",children:[/*#__PURE__*/_jsx(GamePlayerCard,{profileImg:player1Img,playerNum:1,background:\"#DCF6E4\",playerName:player1,score:score1,classForBorder:Player1Class}),/*#__PURE__*/_jsx(GamePlayerCard,{profileImg:player2Img,playerNum:2,background:\"#F7EFD5\",playerName:player2,score:score2,classForBorder:Player2Class})]}),/*#__PURE__*/_jsx(\"hr\",{}),showNewGameButton&&/*#__PURE__*/_jsx(Button,{buttonNum:1,onClick:newGameButtonHandler,buttonText:\"New Game\"}),!showNewGameButton&&/*#__PURE__*/_jsx(Button,{buttonNum:2,onClick:undoButtonHandler,buttonText:\"Undo Step\"}),/*#__PURE__*/_jsx(Button,{buttonNum:3,onClick:function onClick(){navigate(\"/\");},buttonText:\"End Tournament\"})]})]});}export default Connect_4;","map":{"version":3,"sources":["D:/TP/Connect4-reactjs/connect4-reactjs/src/pages/game/Connect_4.tsx"],"names":["GamePlayerCard","Button","useNavigate","useReducer","useState","checkForWin","deepCloneBoard","generateNewBoard","gameInitiated","initialGameState","player1","player2","currentPlayer","board","gameOver","message","gameReducer","state","action","type","nextPlayer","Error","Connect_4","player1Img","player2Img","score1","score2","setScore1","setScore2","gameNumber","setGameNumber","gameState","dispatchGameState","currentMoveRow","setCurrentMoveRow","currentMoveColumn","setCurrentMoveColumn","showCongratulation","setshowCongratulation","showNewGameButton","setshowNewGameButton","undoButtonPressed","setundoButtonPressed","Player1Class","setPlayer1Class","Player2Class","setPlayer2Class","result","play","c","r","console","log","playerWon","displayCongratulationAndButton","currentPlayerUndo","profileImgBorder","newGameButtonHandler","alert","undoButtonHandler","initiateGame","navigate","map","d","rowIndex","value","colIndex","showRing","winningCombination","filter","length","height","width","borderRadius","border"],"mappings":"2QAAA,MAAO,iBAAP,CACA,MAAOA,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAAQC,WAAR,KAA0B,kBAA1B,CACA,OAASC,UAAT,CAAqBC,QAArB,KAAqC,OAArC,CACA,OAASC,WAAT,CAAsBC,cAAtB,CAAsCC,gBAAtC,KAA8D,iBAA9D,C,wFAEA,GAAIC,CAAAA,aAAa,CAAG,KAApB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACrBC,OAAO,CAAE,CADY,CAErBC,OAAO,CAAE,CAFY,CAGrBC,aAAa,CAAE,IAHM,CAIrBC,KAAK,CAAE,CACC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CADD,CAEC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAFD,CAGC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAHD,CAIC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAJD,CAKC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CALD,CAMC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAND,CAOC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAPD,CAQC,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CARD,CAJc,CAcrBC,QAAQ,CAAE,KAdW,CAerBC,OAAO,CAAE,EAfY,CAAzB,CAiBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAYC,MAAZ,CAA2B,CAC3C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,SAAL,CACE,sCACKV,gBADL,MAEEI,KAAK,CAAEK,MAAM,CAACL,KAFhB,GAIF,IAAK,cAAL,CACE,sCACKI,KADL,MAEEL,aAAa,CAAEM,MAAM,CAACE,UAFxB,CAGEP,KAAK,CAAEK,MAAM,CAACL,KAHhB,GAKF,IAAK,SAAL,CACE,sCACKI,KADL,MAEEH,QAAQ,CAAE,IAFZ,CAGEC,OAAO,CAAEG,MAAM,CAACH,OAHlB,CAIEF,KAAK,CAAEK,MAAM,CAACL,KAJhB,GAMF,IAAK,eAAL,CACE,sCACKI,KADL,MAEEF,OAAO,CAAEG,MAAM,CAACH,OAFlB,GAIF,QACE,KAAMM,CAAAA,KAAK,oBAAYH,MAAM,CAACC,IAAnB,8BAAX,CAzBJ,CA2BH,CA5BD,CA2CA,QAASG,CAAAA,SAAT,MAA2I,IAAvHC,CAAAA,UAAuH,MAAvHA,UAAuH,CAA3GC,UAA2G,MAA3GA,UAA2G,CAA/Fd,OAA+F,MAA/FA,OAA+F,CAAtFC,OAAsF,MAAtFA,OAAsF,CAA7Ec,MAA6E,MAA7EA,MAA6E,CAArEC,MAAqE,MAArEA,MAAqE,CAA7DC,SAA6D,MAA7DA,SAA6D,CAAlDC,SAAkD,MAAlDA,SAAkD,CAAvCC,UAAuC,MAAvCA,UAAuC,CAA3BC,aAA2B,MAA3BA,aAA2B,CAEvI,gBAAuC3B,UAAU,CAACa,WAAD,CAAcP,gBAAd,CAAjD,4CAAOsB,SAAP,iBAAkBC,iBAAlB,iBACA,cAA4C5B,QAAQ,CAAC,CAAD,CAApD,wCAAO6B,cAAP,eAAuBC,iBAAvB,eACA,eAAkD9B,QAAQ,CAAC,CAAD,CAA1D,yCAAO+B,iBAAP,eAA0BC,oBAA1B,eAEA,eAAoDhC,QAAQ,CAAC,KAAD,CAA5D,yCAAOiC,kBAAP,eAA2BC,qBAA3B,eACA,eAAkDlC,QAAQ,CAAC,KAAD,CAA1D,yCAAOmC,iBAAP,eAA0BC,oBAA1B,eACA,eAAkDpC,QAAQ,CAAC,KAAD,CAA1D,0CAAOqC,iBAAP,gBAA0BC,oBAA1B,gBACA,gBAAwCtC,QAAQ,CAAC,sBAAD,CAAhD,2CAAOuC,YAAP,gBAAqBC,eAArB,gBACA,gBAAwCxC,QAAQ,CAAC,EAAD,CAAhD,2CAAOyC,YAAP,gBAAqBC,eAArB,gBAEA,GAAIjC,CAAAA,KAAK,CAAGP,cAAc,CAACyB,SAAS,CAAClB,KAAX,CAA1B,CAEA,GAAIkC,CAAAA,MAAU,CAAuE1C,WAAW,CAACQ,KAAD,CAAhG,CAEA;AACA,GAAMmC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAc,CACvB,GAAI,CAAClB,SAAS,CAACjB,QAAf,CAAyB,+BACrBD,KAAK,CAAGP,cAAc,CAACyB,SAAS,CAAClB,KAAX,CAAtB,CACA;AACA,IAAK,GAAIqC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,CAArB,CAAwBA,CAAC,EAAzB,CAA6B,CACzB,GAAI,CAACrC,KAAK,CAACqC,CAAD,CAAL,CAASD,CAAT,CAAL,CAAkB,CACdpC,KAAK,CAACqC,CAAD,CAAL,CAASD,CAAT,EAAclB,SAAS,CAACnB,aAAxB,CACAsB,iBAAiB,CAACgB,CAAD,CAAjB,CACAd,oBAAoB,CAACa,CAAD,CAApB,CACAE,OAAO,CAACC,GAAR,CAAYvC,KAAZ,EACA,MACH,CACJ,CAED;AACAkC,MAAM,CAAG1C,WAAW,CAACQ,KAAD,CAApB,CACA,GAAI,UAAAkC,MAAM,QAAN,kCAAQM,SAAR,IAAsBtB,SAAS,CAACrB,OAApC,CAA6C,CACzC4C,8BAA8B,GAC9B3B,SAAS,CAACF,MAAM,CAAG,CAAV,CAAT,CACAI,UAAU,CAAG,CAAb,CAAiBC,aAAa,CAACD,UAAU,CAAC,CAAZ,CAA9B,CAA+CG,iBAAiB,CAAC,CAACb,IAAI,CAAE,eAAP,CAAwBJ,OAAO,CAAE,sBAAjC,CAAD,CAAhE,CACAiB,iBAAiB,CAAC,CACdb,IAAI,CAAE,SADQ,CAEdJ,OAAO,CAAE,uBAFK,CAGdF,KAAK,CAALA,KAHc,CAAD,CAAjB,CAKH,CATD,IASO,IAAI,WAAAkC,MAAM,QAAN,oCAAQM,SAAR,IAAsBtB,SAAS,CAACpB,OAApC,CAA6C,CAChD2C,8BAA8B,GAC9B1B,SAAS,CAACF,MAAM,CAAG,CAAV,CAAT,CACAG,UAAU,CAAG,CAAb,CAAiBC,aAAa,CAACD,UAAU,CAAC,CAAZ,CAA9B,CAA+CG,iBAAiB,CAAC,CAACb,IAAI,CAAE,eAAP,CAAwBJ,OAAO,CAAE,sBAAjC,CAAD,CAAhE,CACAiB,iBAAiB,CAAC,CACdb,IAAI,CAAE,SADQ,CAEdJ,OAAO,CAAE,wBAFK,CAGdF,KAAK,CAALA,KAHc,CAAD,CAAjB,CAKH,CATM,IASA,IAAI,WAAAkC,MAAM,QAAN,oCAAQM,SAAR,IAAsB,MAA1B,CAAkC,CACrCC,8BAA8B,GAC9BzB,UAAU,CAAG,CAAb,CAAiBC,aAAa,CAACD,UAAU,CAAC,CAAZ,CAA9B,CAA+CG,iBAAiB,CAAC,CAACb,IAAI,CAAE,eAAP,CAAwBJ,OAAO,CAAE,sBAAjC,CAAD,CAAhE,CACAiB,iBAAiB,CAAC,CACdb,IAAI,CAAE,SADQ,CAEdJ,OAAO,CAAE,YAFK,CAGdF,KAAK,CAALA,KAHc,CAAD,CAAjB,CAKH,CARM,IAQA,CACH,GAAI0C,CAAAA,iBAAiB,CAAGxB,SAAS,CAACnB,aAAlC,CACA,GAAG6B,iBAAH,CAAqB,CACjB,GAAMrB,CAAAA,UAAU,CAAGmC,iBAAnB,CACAC,gBAAgB,CAACpC,UAAD,CAAhB,CACAY,iBAAiB,CAAC,CAAEb,IAAI,CAAE,cAAR,CAAwBC,UAAU,CAAVA,UAAxB,CAAoCP,KAAK,CAALA,KAApC,CAAD,CAAjB,CACA6B,oBAAoB,CAAC,KAAD,CAApB,CACH,CALD,IAMI,CACA,GAAMtB,CAAAA,WAAU,CAAGW,SAAS,CAACnB,aAAV,GAA4BmB,SAAS,CAACrB,OAAtC,CAAgDqB,SAAS,CAACpB,OAA1D,CAAoEoB,SAAS,CAACrB,OAAjG,CACA8C,gBAAgB,CAACpC,WAAD,CAAhB,CACAY,iBAAiB,CAAC,CAAEb,IAAI,CAAE,cAAR,CAAwBC,UAAU,CAAVA,WAAxB,CAAoCP,KAAK,CAALA,KAApC,CAAD,CAAjB,CACH,CACJ,CACJ,CACD;AAxDA,IAyDK,CACDmB,iBAAiB,CAAC,CACdb,IAAI,CAAE,eADQ,CAEdJ,OAAO,CAAE,qCAFK,CAAD,CAAjB,CAIH,CACJ,CAhED,CAkEA,QAASyC,CAAAA,gBAAT,CAA0BpC,UAA1B,CAA4C,CAExC,GAAGA,UAAU,GAAK,CAAlB,CAAqB,CACjBwB,eAAe,CAAC,sBAAD,CAAf,CACAE,eAAe,CAAC,EAAD,CAAf,CACH,CAHD,IAIK,IAAG1B,UAAU,GAAK,CAAlB,CAAoB,CACrBwB,eAAe,CAAC,EAAD,CAAf,CACAE,eAAe,CAAC,sBAAD,CAAf,CACH,CACJ,CAED,QAASQ,CAAAA,8BAAT,EAAyC,CACrChB,qBAAqB,CAAC,IAAD,CAArB,CACAE,oBAAoB,CAAC,IAAD,CAApB,CACH,CACD;AACA;AACI,QAASiB,CAAAA,oBAAT,EAA+B,CAC3B,GAAG5B,UAAU,CAAG,CAAhB,CAAkB,CACdG,iBAAiB,CAAC,CAAEb,IAAI,CAAE,SAAR,CAAmBN,KAAK,CAAEN,gBAAgB,EAA1C,CAAD,CAAjB,CACA+B,qBAAqB,CAAC,KAAD,CAArB,CACAE,oBAAoB,CAAC,KAAD,CAApB,CACH,CAJD,IAKI,CACAf,MAAM,CAACC,MAAP,CAAgBgC,KAAK,+CAArB,CAAwEhC,MAAM,CAACD,MAAP,CAAgBiC,KAAK,+CAArB,CAAuEA,KAAK,CAAC,WAAD,CAApJ,CACA1B,iBAAiB,CAAC,CAACb,IAAI,CAAE,eAAP,CAAwBJ,OAAO,CAAE,sBAAjC,CAAD,CAAjB,CACH,CACJ,EAED;AACA,QAAS4C,CAAAA,iBAAT,EAA6B,CACzBjB,oBAAoB,CAAC,IAAD,CAApB,CACAX,SAAS,CAAClB,KAAV,CAAgBoB,cAAhB,EAAgCE,iBAAhC,EAAqD,IAArD,CACH,CAELgB,OAAO,CAACC,GAAR,CAAYrB,SAAS,CAAChB,OAAtB,EAEA;AACA,QAAS6C,CAAAA,YAAT,EAAuB,CACnB,GAAGpD,aAAa,GAAK,KAArB,CAA2B,CACvBA,aAAa,CAAG,IAAhB,CACAwB,iBAAiB,CAAC,CAAEb,IAAI,CAAE,SAAR,CAAmBN,KAAK,CAAEN,gBAAgB,EAA1C,CAAD,CAAjB,CACH,CACJ,CAGL;AACI,GAAMsD,CAAAA,QAAQ,CAAG3D,WAAW,EAA5B,CAEA,mBACI,aAAK,SAAS,CAAC,SAAf,WACK0D,YAAY,EADjB,cAEI,YAAK,SAAS,CAAC,WAAf,UACKnD,gBAAgB,CAACI,KAAjB,CAAuBiD,GAAvB,CAA2B,SAACC,CAAD,CAAGC,QAAH,CAAe,CACnC,MAAOvD,CAAAA,gBAAgB,CAACI,KAAjB,CAAuBmD,QAAvB,EAAiCF,GAAjC,CAAqC,SAACG,KAAD,CAAQC,QAAR,CAAmB,cAC3D,GAAMC,CAAAA,QAAQ,CAAG,WAAApB,MAAM,QAAN,oCAAQqB,kBAAR,CAA2BC,MAA3B,CAAkC,SAACN,CAAD,QAAqBA,CAAAA,CAAC,CAAC,CAAD,CAAD,GAAOC,QAAP,EAAmBD,CAAC,CAAC,CAAD,CAAD,GAAOG,QAA/C,EAAlC,EAA2FI,MAA3F,EAAoG,CAArH,CAEA,mBAAO,YACK,EAAE,WAAKN,QAAL,SAAgBE,QAAhB,CADP,CAEK,OAAO,CAAE,kBAAI,CAACf,OAAO,CAACC,GAAR,CAAY,CAACY,QAAQ,CAARA,QAAD,CAAWE,QAAQ,CAARA,QAAX,CAAZ,EAAoClB,IAAI,CAACkB,QAAD,CAAJ,CAAiB,CAFxE,CAIK,SAAS,wBAAkBC,QAAQ,CAAG,wBAAH,CAA8B,EAAxD,CAJd,UAMMtD,KAAK,CAACmD,QAAD,CAAL,CAAgBE,QAAhB,IAA4B,CAA5B,cACG,YACA,EAAE,cAAQF,QAAR,SAAmBE,QAAnB,CADF,CAEA,KAAK,CAAE,CAACK,MAAM,CAAE,MAAT,CAAiBC,KAAK,CAAE,MAAxB,CAAgCC,YAAY,CAAE,KAA9C,CAAqDC,MAAM,CAAE,mBAA7D,CAFP,CAGA,GAAG,CAAEnD,UAHL,CAIA,GAAG,CAAC,EAJJ,EADH,CAOAV,KAAK,CAACmD,QAAD,CAAL,CAAgBE,QAAhB,IAA4B,CAA5B,cACG,YACA,EAAE,cAAQF,QAAR,SAAmBE,QAAnB,CADF,CAEA,KAAK,CAAE,CAACK,MAAM,CAAE,MAAT,CAAiBC,KAAK,CAAE,MAAxB,CAAgCC,YAAY,CAAE,KAA9C,CAAqDC,MAAM,CAAE,mBAA7D,CAFP,CAGA,GAAG,CAAElD,UAHL,CAIA,GAAG,CAAC,EAJJ,EADH,CAOD,IApBL,YAGawC,QAHb,SAGwBE,QAHxB,EAAP,CAwBC,CA3BE,CAAP,CA4BC,CA7BR,CADL,EAFJ,cAoCI,aAAK,SAAS,CAAC,YAAf,wBACI,WAAI,SAAS,CAAC,iBAAd,gCADJ,CAEK7B,kBAAkB,cAAG,UAAG,EAAE,CAAC,gBAAN,CAAuB,SAAS,CAAC,gBAAjC,6BAAH,cAA2E,uCAFlG,CAGM,CAACN,SAAS,CAACjB,QAAX,eAAuB,YAAI,SAAS,CAAC,aAAd,2BAA0Ce,UAA1C,GAH7B,CAIME,SAAS,CAACjB,QAAV,eAAsB,WAAI,SAAS,CAAC,aAAd,UAA6BiB,SAAS,CAAChB,OAAvC,EAJ5B,cAKI,aAAK,SAAS,CAAC,aAAf,wBACI,KAAC,cAAD,EACI,UAAU,CAAEQ,UADhB,CAEI,SAAS,CAAE,CAFf,CAGI,UAAU,CAAC,SAHf,CAII,UAAU,CAAEb,OAJhB,CAKI,KAAK,CAAEe,MALX,CAMI,cAAc,CAAEkB,YANpB,EADJ,cAUI,KAAC,cAAD,EACI,UAAU,CAAEnB,UADhB,CAEI,SAAS,CAAE,CAFf,CAGI,UAAU,CAAC,SAHf,CAII,UAAU,CAAEb,OAJhB,CAKI,KAAK,CAAEe,MALX,CAMI,cAAc,CAAEmB,YANpB,EAVJ,GALJ,cAwBI,aAxBJ,CAyBMN,iBAAiB,eAAI,KAAC,MAAD,EAAQ,SAAS,CAAE,CAAnB,CAAsB,OAAO,CAAEkB,oBAA/B,CAAqD,UAAU,CAAC,UAAhE,EAzB3B,CA0BM,CAAClB,iBAAD,eAAsB,KAAC,MAAD,EAAQ,SAAS,CAAE,CAAnB,CAAsB,OAAO,CAAEoB,iBAA/B,CAAkD,UAAU,CAAC,WAA7D,EA1B5B,cA2BI,KAAC,MAAD,EAAQ,SAAS,CAAE,CAAnB,CAAsB,OAAO,CAAE,kBAAI,CAACE,QAAQ,KAAR,CAAc,CAAlD,CAAoD,UAAU,CAAC,gBAA/D,EA3BJ,GApCJ,GADJ,CAoEH,CAED,cAAevC,CAAAA,SAAf","sourcesContent":["import './Connect_4.css';\r\nimport GamePlayerCard from '../../components/GamePlayerCard';\r\nimport Button from '../../components/Button';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { useReducer, useState } from 'react';\r\nimport { checkForWin, deepCloneBoard, generateNewBoard } from '../../GameLogic';\r\n\r\nlet gameInitiated = false;\r\n\r\nconst initialGameState = {\r\n    player1: 1,\r\n    player2: 2,\r\n    currentPlayer: null,\r\n    board: [\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null],\r\n            [null, null, null, null, null, null, null, null]\r\n           ],\r\n    gameOver: false,\r\n    message: '',\r\n}\r\nconst gameReducer = (state:any, action:any) => {\r\n    switch (action.type) {\r\n      case 'newGame':\r\n        return {\r\n          ...initialGameState,\r\n          board: action.board,\r\n        }\r\n      case 'togglePlayer':\r\n        return {\r\n          ...state,\r\n          currentPlayer: action.nextPlayer,\r\n          board: action.board,\r\n        }\r\n      case 'endGame':\r\n        return {\r\n          ...state,\r\n          gameOver: true,\r\n          message: action.message,\r\n          board: action.board,\r\n        }\r\n      case 'updateMessage':\r\n        return {\r\n          ...state,\r\n          message: action.message,\r\n        }\r\n      default:\r\n        throw Error(`Action \"${action.type}\" is not a valid action.`)\r\n    }\r\n}\r\n\r\ninterface ButtonProps{\r\n    player1Img: any; \r\n    player2Img: any;\r\n    player1: string;\r\n    player2: string;\r\n    score1:number;\r\n    score2:number;\r\n    setScore1:any;\r\n    setScore2:any;\r\n    gameNumber:number;\r\n    setGameNumber:any;\r\n}\r\n\r\nfunction Connect_4({player1Img, player2Img, player1, player2, score1, score2, setScore1, setScore2, gameNumber, setGameNumber}:ButtonProps){\r\n    \r\n    const [gameState, dispatchGameState] = useReducer(gameReducer, initialGameState); \r\n    const [currentMoveRow, setCurrentMoveRow] = useState(0);\r\n    const [currentMoveColumn, setCurrentMoveColumn] = useState(0);\r\n    \r\n    const [showCongratulation, setshowCongratulation] = useState(false);\r\n    const [showNewGameButton, setshowNewGameButton] = useState(false);\r\n    const [undoButtonPressed, setundoButtonPressed] = useState(false);\r\n    const [Player1Class, setPlayer1Class] = useState('classForOrangeBorder');\r\n    const [Player2Class, setPlayer2Class] = useState('');\r\n\r\n    let board = deepCloneBoard(gameState.board);\r\n\r\n    let result:any/*{playerWon: 1|2|'draw', winningCombination: Array<Array<number>>}*/= checkForWin(board) ;\r\n\r\n    //triggered when clicked on circle\r\n    const play = (c:number) => {\r\n        if (!gameState.gameOver) {\r\n            board = deepCloneBoard(gameState.board)\r\n            //check if cell is taken by starting at the bottom row and working up\r\n            for (let r = 7; r >= 0; r--) {\r\n                if (!board[r][c]) {\r\n                    board[r][c] = gameState.currentPlayer\r\n                    setCurrentMoveRow(r);\r\n                    setCurrentMoveColumn(c);\r\n                    console.log(board)\r\n                    break\r\n                }\r\n            }\r\n\r\n            // Check status of board\r\n            result = checkForWin(board);\r\n            if (result?.playerWon === gameState.player1) {\r\n                displayCongratulationAndButton();\r\n                setScore1(score1 + 1);\r\n                gameNumber < 4 ? setGameNumber(gameNumber+1) : dispatchGameState({type: 'updateMessage', message: 'Game Tournament Over'});\r\n                dispatchGameState({\r\n                    type: 'endGame',\r\n                    message: 'Player1 (Green) wins!',\r\n                    board,\r\n                })\r\n            } else if (result?.playerWon === gameState.player2) {\r\n                displayCongratulationAndButton();\r\n                setScore2(score2 + 1);\r\n                gameNumber < 4 ? setGameNumber(gameNumber+1) : dispatchGameState({type: 'updateMessage', message: 'Game Tournament Over'});\r\n                dispatchGameState({\r\n                    type: 'endGame',\r\n                    message: 'Player2 (Yellow) wins!',\r\n                    board,\r\n                })\r\n            } else if (result?.playerWon === 'draw') {\r\n                displayCongratulationAndButton();\r\n                gameNumber < 4 ? setGameNumber(gameNumber+1) : dispatchGameState({type: 'updateMessage', message: 'Game Tournament Over'});\r\n                dispatchGameState({\r\n                    type: 'endGame',\r\n                    message: 'Draw Game!',\r\n                    board,\r\n                })\r\n            } else {\r\n                let currentPlayerUndo = gameState.currentPlayer;\r\n                if(undoButtonPressed){\r\n                    const nextPlayer = currentPlayerUndo;\r\n                    profileImgBorder(nextPlayer);\r\n                    dispatchGameState({ type: 'togglePlayer', nextPlayer, board });\r\n                    setundoButtonPressed(false);\r\n                }\r\n                else{\r\n                    const nextPlayer = gameState.currentPlayer === gameState.player1 ? gameState.player2 : gameState.player1;\r\n                    profileImgBorder(nextPlayer);\r\n                    dispatchGameState({ type: 'togglePlayer', nextPlayer, board });\r\n                }\r\n            }\r\n        }\r\n        // it's gameover and a user clicked a cell\r\n        else {\r\n            dispatchGameState({\r\n                type: 'updateMessage',\r\n                message: 'Game Over. Please start a new game.',\r\n            })\r\n        }\r\n    }\r\n\r\n    function profileImgBorder(nextPlayer:number){\r\n        \r\n        if(nextPlayer === 1 ){\r\n            setPlayer1Class('classForOrangeBorder');\r\n            setPlayer2Class('');\r\n        }\r\n        else if(nextPlayer === 2){\r\n            setPlayer1Class('');\r\n            setPlayer2Class('classForOrangeBorder');\r\n        }\r\n    }\r\n\r\n    function displayCongratulationAndButton(){\r\n        setshowCongratulation(true);\r\n        setshowNewGameButton(true);\r\n    }\r\n    //REMOVE EVENT LISTENERS AND DOCUMENT.....================================================================\r\n    //Start new game\r\n        function newGameButtonHandler(){\r\n            if(gameNumber < 4){\r\n                dispatchGameState({ type: 'newGame', board: generateNewBoard() })\r\n                setshowCongratulation(false);\r\n                setshowNewGameButton(false);\r\n            }\r\n            else{\r\n                score1>score2 ? alert(`Player 1 won please click on end tournament`) : (score2>score1 ? alert(`Player 2 won please click on end tournament`) : alert(\"Game Draw\"));\r\n                dispatchGameState({type: 'updateMessage', message: 'Game Tournament Over'});\r\n            }\r\n        };\r\n\r\n        //UNDO\r\n        function undoButtonHandler() {\r\n            setundoButtonPressed(true);\r\n            gameState.board[currentMoveRow][currentMoveColumn] = null;\r\n        }\r\n\r\n    console.log(gameState.message);\r\n\r\n    //Start the game\r\n    function initiateGame(){\r\n        if(gameInitiated === false){\r\n            gameInitiated = true;\r\n            dispatchGameState({ type: 'newGame', board: generateNewBoard()})\r\n        }\r\n    }\r\n    \r\n\r\n//  ============================================================================================================================================================   \r\n    const navigate = useNavigate();\r\n\r\n    return(\r\n        <div className='gameApp'>\r\n            {initiateGame()}\r\n            <div className=\"left-half\">\r\n                {initialGameState.board.map((d,rowIndex)=> {\r\n                        return initialGameState.board[rowIndex].map((value, colIndex)=>{\r\n                            const showRing = result?.winningCombination.filter((d:Array<number>) => d[0]===rowIndex && d[1]===colIndex).length > 0;\r\n                            \r\n                            return <div \r\n                                        id={`${rowIndex}${colIndex}`} \r\n                                        onClick={()=>{console.log({rowIndex, colIndex});  play(colIndex); }} \r\n                                        key={`${rowIndex}${colIndex}`} \r\n                                        className={`CirclesWhite ${showRing ? 'winningCombinationRing' : '' }`}\r\n                                    >\r\n                                        {board[rowIndex][colIndex]===1 ? \r\n                                            <img \r\n                                            id={`img${rowIndex}${colIndex}`} \r\n                                            style={{height: '44px', width: '44px', borderRadius: '50%', border: '3px solid #75fc9d'}} \r\n                                            src={player1Img} \r\n                                            alt=\"\" \r\n                                            /> : \r\n                                        (board[rowIndex][colIndex]===2 ? \r\n                                            <img \r\n                                            id={`img${rowIndex}${colIndex}`} \r\n                                            style={{height: '44px', width: '44px', borderRadius: '50%', border: '3px solid #f5d878'}} \r\n                                            src={player2Img} \r\n                                            alt=\"\" \r\n                                            />: \r\n                                        null)\r\n                                        }\r\n                                        {/* {rowIndex} {value} {colIndex}  */}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    )}\r\n            </div>\r\n            \r\n            <div className='right-half'>\r\n                <h2 className='gamesTournament'>3 Games Tournament</h2>\r\n                {showCongratulation ? <p id='congratulation' className='congratulation'>Congratulation!</p> : <p>Game is going on</p>}\r\n                { !gameState.gameOver && <h3 className='playingGame'>Playing Game {gameNumber}</h3> }\r\n                { gameState.gameOver && <h3 className='playingGame'>{gameState.message}</h3> }\r\n                <div className='gamePlayers'>\r\n                    <GamePlayerCard \r\n                        profileImg={player1Img}\r\n                        playerNum={1}\r\n                        background=\"#DCF6E4\" \r\n                        playerName={player1}\r\n                        score={score1}\r\n                        classForBorder={Player1Class}\r\n                    />\r\n                    \r\n                    <GamePlayerCard \r\n                        profileImg={player2Img}\r\n                        playerNum={2}\r\n                        background=\"#F7EFD5\" \r\n                        playerName={player2}\r\n                        score={score2}\r\n                        classForBorder={Player2Class}\r\n                    />\r\n                </div>\r\n                <hr />\r\n                { showNewGameButton && <Button buttonNum={1} onClick={newGameButtonHandler} buttonText='New Game'/> }\r\n                { !showNewGameButton && <Button buttonNum={2} onClick={undoButtonHandler} buttonText=\"Undo Step\"/>}\r\n                <Button buttonNum={3} onClick={()=>{navigate(`/`)}} buttonText=\"End Tournament\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Connect_4;"]},"metadata":{},"sourceType":"module"}