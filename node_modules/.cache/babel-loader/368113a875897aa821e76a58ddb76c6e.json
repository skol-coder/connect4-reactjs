{"ast":null,"code":"import _toConsumableArray from\"D:\\\\TP\\\\Connect4-reactjs\\\\connect4-reactjs\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";export var generateNewBoard=function generateNewBoard(){return[[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null]];};export var deepCloneBoard=function deepCloneBoard(board){return[_toConsumableArray(board[0]),_toConsumableArray(board[1]),_toConsumableArray(board[2]),_toConsumableArray(board[3]),_toConsumableArray(board[4]),_toConsumableArray(board[5]),_toConsumableArray(board[6]),_toConsumableArray(board[7])];};// for real tho...all credit for this super optimized logic belongs here: Jeff Leu circa November 23, 2016\nvar checkVertical=function checkVertical(board){// Check only if row is 3 or greater\nfor(var r=3;r<8;r++){for(var c=0;c<8;c++){if(board[r][c]){if(board[r][c]===board[r-1][c]&&board[r][c]===board[r-2][c]&&board[r][c]===board[r-3][c]){var data={playerWon:board[r][c],winningCombination:[[r,c],[r-1,c],[r-2,c],[r-3,c]]};return data;}}}}};var checkHorizontal=function checkHorizontal(board){// Check only if column is 3 or less\nfor(var r=0;r<8;r++){for(var c=0;c<5;c++){if(board[r][c]){if(board[r][c]===board[r][c+1]&&board[r][c]===board[r][c+2]&&board[r][c]===board[r][c+3]){var data={playerWon:board[r][c],winningCombination:[[r,c],[r,c+1],[r,c+2],[r,c+3]]};return data;}}}}};var checkDiagonalRight=function checkDiagonalRight(board){// Check only if row is 3 or greater AND column is 3 or less\nfor(var r=3;r<8;r++){for(var c=0;c<8;c++){//4->8\nif(board[r][c]){if(board[r][c]===board[r-1][c+1]&&board[r][c]===board[r-2][c+2]&&board[r][c]===board[r-3][c+3]){var data={playerWon:board[r][c],winningCombination:[[r,c],[r-1,c+1],[r-2,c+2],[r-3,c+3]]};return data;}}}}};var checkDiagonalLeft=function checkDiagonalLeft(board){// Check only if row is 3 or greater AND column is 3 or greater\nfor(var r=3;r<8;r++){for(var c=3;c<8;c++){if(board[r][c]){if(board[r][c]===board[r-1][c-1]&&board[r][c]===board[r-2][c-2]&&board[r][c]===board[r-3][c-3]){var data={playerWon:board[r][c],winningCombination:[[r,c],[r-1,c-1],[r-2,c-2],[r-3,c-3]]};return data;}}}}};var checkDraw=function checkDraw(board){for(var r=0;r<8;r++){for(var c=0;c<8;c++){if(board[r][c]===null){return null;}}}// return 'draw'\n};export var checkForWin=function checkForWin(board){return checkVertical(board)||checkDiagonalRight(board)||checkDiagonalLeft(board)||checkHorizontal(board)||checkDraw(board);};","map":{"version":3,"sources":["D:/TP/Connect4-reactjs/connect4-reactjs/src/GameLogic.tsx"],"names":["generateNewBoard","deepCloneBoard","board","checkVertical","r","c","data","playerWon","winningCombination","checkHorizontal","checkDiagonalRight","checkDiagonalLeft","checkDraw","checkForWin"],"mappings":"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","sourcesContent":["\r\nexport const generateNewBoard = () => [\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null],\r\n    [null, null, null, null, null, null, null, null]\r\n  ]\r\n\r\n  export const deepCloneBoard = (board:any) => [\r\n    [...board[0]],\r\n    [...board[1]],\r\n    [...board[2]],\r\n    [...board[3]],\r\n    [...board[4]],\r\n    [...board[5]],\r\n    [...board[6]],\r\n    [...board[7]]\r\n  ]\r\n  \r\n  // for real tho...all credit for this super optimized logic belongs here: Jeff Leu circa November 23, 2016\r\n  const checkVertical = (board:any) => {\r\n    // Check only if row is 3 or greater\r\n    for (let r = 3; r < 8; r++) {\r\n      for (let c = 0; c < 8; c++) {\r\n        if (board[r][c]) {\r\n          if (\r\n            board[r][c] === board[r - 1][c] &&\r\n            board[r][c] === board[r - 2][c] &&\r\n            board[r][c] === board[r - 3][c]\r\n          ) {\r\n            const data = {playerWon:board[r][c], winningCombination:[[r, c],[r-1, c], [r-2, c], [r-3, c]]};\r\n            return data;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const checkHorizontal = (board:any) => {\r\n    // Check only if column is 3 or less\r\n    for (let r = 0; r < 8; r++) {\r\n      for (let c = 0; c < 5; c++) {\r\n        if (board[r][c]) {\r\n          if (\r\n            board[r][c] === board[r][c + 1] &&\r\n            board[r][c] === board[r][c + 2] &&\r\n            board[r][c] === board[r][c + 3]\r\n          ) {\r\n            const data = {playerWon:board[r][c], winningCombination:[[r, c],[r, c+1], [r, c+2], [r, c+3]]};\r\n            return data;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const checkDiagonalRight = (board:any) => {\r\n    // Check only if row is 3 or greater AND column is 3 or less\r\n    for (let r = 3; r < 8; r++) {\r\n      for (let c = 0; c < 8; c++) { //4->8\r\n        if (board[r][c]) {\r\n          if (\r\n            board[r][c] === board[r - 1][c + 1] &&\r\n            board[r][c] === board[r - 2][c + 2] &&\r\n            board[r][c] === board[r - 3][c + 3]\r\n          ) {\r\n            const data = {playerWon:board[r][c], winningCombination:[[r, c],[r-1, c+1], [r-2, c+2], [r-3, c+3]]};\r\n            return data;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const checkDiagonalLeft = (board:any) => {\r\n    // Check only if row is 3 or greater AND column is 3 or greater\r\n    for (let r = 3; r < 8; r++) {\r\n      for (let c = 3; c < 8; c++) {\r\n        if (board[r][c]) {\r\n          if (\r\n            board[r][c] === board[r - 1][c - 1] &&\r\n            board[r][c] === board[r - 2][c - 2] &&\r\n            board[r][c] === board[r - 3][c - 3]\r\n          ) {\r\n            const data = {playerWon:board[r][c], winningCombination:[[r, c],[r-1, c-1], [r-2, c-2], [r-3, c-3]]};\r\n            return data;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  const checkDraw = (board:any) => {\r\n    for (let r = 0; r < 8; r++) {\r\n      for (let c = 0; c < 8; c++) {\r\n        if (board[r][c] === null) {\r\n          return null\r\n        }\r\n      }\r\n    }\r\n    // return 'draw'\r\n  }\r\n  \r\n  export const checkForWin = (board:any) => {\r\n    return (\r\n      checkVertical(board) ||\r\n      checkDiagonalRight(board) ||\r\n      checkDiagonalLeft(board) ||\r\n      checkHorizontal(board) ||\r\n      checkDraw(board)\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}